spring:
  jpa:
    hibernate:
      ddl-auto: update  # Change from 'none' 
    properties:
      hibernate:
        hbm2ddl:
          auto: update
    # hibernate:
    #   ddl-auto: none # validate  HERE none
    #defer-datasource-initialization: true
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/gitrdfdb}
    username: root
    password: ${SPRING_DATASOURCE_PASSWORD:example} # temporary for prototyping
  flyway:
    baseline-on-migrate: true # HERE true
    locations: 'classpath:db/migration'
    #locations: 'classpath:org/springframework/integration/jdbc'
    validate-migration-naming: true



  #sql:
  #  init:
  #    mode: always
  #    platform: postgresql

worker:
  commits-per-iteration: 100
  issues:
    #pre-secondary-rate-limit-check: 800
    #seconds-to-sleep: 60
    #issue-page-size: 100
    export-comments: true
  task:
    rdf-git-repo:
      enabled: ${WORKER_TASK_RDFGITREPO_ENABLED:true}
    rdf-github-repo:
      enabled: ${WORKER_TASK_RDFGITHUBREPO_ENABLED:true}

github:
  login:
    #jwt-token: ${GITHUB_LOGIN_JWT_TOKEN}
    key: ${GITHUB_LOGIN_KEY}
    app:
      id: ${GITHUB_LOGIN_APP_ID}
      installation:
        id: ${GITHUB_LOGIN_APP_INSTALLATION_ID}
    system:
      user:
        name: ${GITHUB_LOGIN_SYSTEM_USER_NAME}
        personal-access-token: ${GITHUB_LOGIN_SYSTEM_USER_PERSONALACCESSTOKEN}
  rate-limit:
    requests-left-border: 50 # At this amount of requests left the application will start waiting for the rate limit to reset

server:
  port: 28099

logging:
  level:
    org.hibernate.SQL: DEBUG 
    root: info
    de:
      leipzig:
        htwk:
          gitrdf:
            worker: info
